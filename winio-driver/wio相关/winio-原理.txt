
Windows API keybd_event进行软件的按键模拟，但是这样做产生的按键消息仅对一些例如记事本、IE等的程序有操控能力，而对IE控件无效！
原因：IE控件屏蔽了Windows操作系统的消息封装机制，不接受keybd_event事件消息。

直接与键盘驱动程序打交道。
对这样的程序无论用PostMessage或者是keybd_event都不会有反应，因为这些函数都在较高层。
对于这样的程序，只好用直接读写键盘端口的方法来模拟硬件事件了。
要用这个方法来模拟键盘，需要先了解一下键盘编程的相关知识。
在DOS时代，当用户按下或者放开一个键时，就会产生一个键盘中断(如果键盘中断是允许的)，这样程序会跳转到BIOS中的键盘中断处理程序去执行。
打开windows的设备管理器，可以查看到键盘控制器由两个端口控制。
其中&H60是数据端口，可以读出键盘数据，而&H64是控制端口，用来发出控制信号。
也就是，从&H60号端口可以读此键盘的按键信息，当从这个端口读取一个字节，该字节的低7位就是按键的扫描码，而高1位则表示是按下键还是释放键。当按下键时，最高位为0，称为通码，当释放键时，最高位为1，称为断码。
既然从这个端口读数据可以获得按键信息，那么向这个端口写入数据就可以模拟按键了！

一般编写的应用程序是运行在用户态的，而读写硬件这样的操作要运行在核心态。要实现读写硬件的功能，可能要自己开发驱动程序。
那么，不通过写驱动程序，能不能实现这样的功能呢？
当然可以了！用WinIo就可以！

什么是WINIO？WINIO是一个全免费的、无需注册的、含源程序的WINDOWS2000端口操作驱动程序组件(可以到http://www.internals.com/上去下载)。
它不仅可以操作端口，还可以操作内存；不仅能在C++下用，还可以在DELPHI、C#等其它环境下使用，性能特别优异。

WinIo - Version 3.0，解压缩后可以看到几个文件夹，将Binaries文件夹下的WinIo64.sys，WinIo32.dll复制到自己程序的Debug目录下：64位Win8系统下WinIO的使用 <wbr>VS2010 <wbr>驱动级模拟按键

然后开启window系统的开发测试模式：
cmd->bcdedit /set testsigning on

然后修改WinIo64.sys的测试签名
1.打开 WinIO64.sys的属性框，翻到“数字签名”选项卡，点击“详细信息”
2.在新出来的对话框中点击“查看证书”
3.在又新出来的对话框中点击“安装证书”
4.点击“下一步”，然后选择“将所有的证书放入下列存储”
5.点击浏览，选择“受信任的根证书发布机构”

最后，重启电脑。